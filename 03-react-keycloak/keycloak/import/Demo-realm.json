{
  "id": "de2aac55-26b2-40ae-a644-9198cd36e347",
  "realm": "Demo",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "b5da7fef-afec-434b-bc2a-fb625fb38f2b",
        "name": "default-roles-demo",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "de2aac55-26b2-40ae-a644-9198cd36e347",
        "attributes": {}
      },
      {
        "id": "42864251-0bbb-45e6-bc88-1a6e1431ae9a",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "de2aac55-26b2-40ae-a644-9198cd36e347",
        "attributes": {}
      },
      {
        "id": "8da92d3c-8aac-4f04-b2bd-24d0b90190fc",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "de2aac55-26b2-40ae-a644-9198cd36e347",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "a09c838f-0e25-4ef0-9345-42d01f51dee2",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "25d42023-91b8-4122-bfd9-833b04f34947",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "23a6613e-464f-4ee1-950d-0e66dbd7beee",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "d5d4677f-c48c-4c7e-b379-ee80d5fa782b",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "453280a7-b7b1-477a-b948-20136f06ff2e",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "ddea7190-7804-480f-856a-6de3f223ea25",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "6da49770-b8e2-4321-8aa2-a77c44defd90",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "cc6ecae1-d8d3-4feb-b1fa-545df88add12",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "f6e8f128-f8d4-4950-ba08-365848bb5f84",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "7d4731f4-5a79-4d0c-bfe3-b80b770a53be",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients",
                "view-events",
                "manage-events",
                "view-users",
                "create-client",
                "view-clients",
                "view-authorization",
                "manage-clients",
                "manage-realm",
                "view-realm",
                "manage-identity-providers",
                "impersonation",
                "manage-authorization",
                "query-users",
                "query-groups",
                "view-identity-providers",
                "query-realms",
                "manage-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "85fdaf37-099a-473a-8ab7-fbc6627e6c83",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "a32951ac-beb5-49b1-80e3-ec02b151906c",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "197ec94e-b5a2-4018-8f04-c400d4278945",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "e152892c-0bd4-4f70-a514-76647c6d35d6",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "e38112bf-b7db-409f-83a8-88c6d6fd96b8",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "6a70cd26-229f-4fd5-869a-c7ce01ef31ea",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "f1fa72cb-a8d3-48e8-b4a7-be14e6ae4f99",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "942a7116-6288-45da-ad2f-d7358a93a67d",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        },
        {
          "id": "0e321add-3f58-443d-8422-2355e3a21744",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "backend": [
        {
          "id": "3aa6e352-957d-4db0-82b3-29b80f012805",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "bded5276-86ac-4eb6-8698-5906159a07ac",
          "attributes": {}
        }
      ],
      "account-console": [],
      "broker": [
        {
          "id": "e98f1b5f-ccce-4c95-b427-6b8a566fdf52",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "0b843248-544c-4521-b0e6-325d2f7fc717",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "97dabf61-f769-411c-b5b7-de6e3035818e",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "bb4d47df-104a-4b20-ae6e-6013427a27bd",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "28c34cd8-ec61-4487-ac5f-5d9b13904e4e",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "ea7836b8-9877-4f11-87d0-936915c0a8f0",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "68757f49-5097-4023-9ddb-2696187b6083",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "ca720b06-318c-45e3-8014-a1e5a3c2bfb7",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "568a98c2-6355-42bd-a1db-991211f6d407",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        },
        {
          "id": "7013b8e5-5089-4367-b0fa-b8076dedc5da",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
          "attributes": {}
        }
      ],
      "frontend": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "b5da7fef-afec-434b-bc2a-fb625fb38f2b",
    "name": "default-roles-demo",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "de2aac55-26b2-40ae-a644-9198cd36e347"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppGoogleName", "totpAppFreeOTPName"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "d5fbc938-2248-4256-b611-a33ffcac8a78",
      "createdTimestamp": 1678623891039,
      "username": "demo",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Demo",
      "lastName": "Demo",
      "email": "demo@exmaple.com",
      "credentials": [
        {
          "id": "175078a2-1ea3-4b2e-bb5a-713d7f5020c3",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1678623904577,
          "secretData": "{\"value\":\"gfvx5B8R+rSeiRNqiL8dUNFTA84XxkKmPBNSMY7HwEx3lSGinvXj0Z+df1c133d2zT0PGjyCkryqgotRKyjF2g==\",\"salt\":\"k3pw+KE6dRwJWAIHstmPSA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-demo"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "15ec05ef-88d9-4a7e-a626-478c0b84cdde",
      "createdTimestamp": 1678623940034,
      "username": "lajos",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Lajos",
      "lastName": "Cseppentő",
      "email": "lajos@example.com",
      "credentials": [
        {
          "id": "dff9b8ec-d43e-462a-b288-668bf2ce0ab4",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1678624521009,
          "secretData": "{\"value\":\"SDWtf881cZTSU+Gcot4ytybt+h0eCmruOptiKh+CjTP/vP20o370J3/INhGrrBxDUPnQsSn2UL8lNzhYJk24OQ==\",\"salt\":\"wIqFEB4Eh00lk0mbSIFp2Q==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-demo"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "7280d29e-6ee5-47a1-a90b-2c8c9e271440",
      "createdTimestamp": 1678624177981,
      "username": "service-account-backend",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "backend",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-demo"],
      "clientRoles": {
        "backend": ["uma_protection"]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "2fe73fe9-b822-4fc6-8deb-ea5bfb42bf2f",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Demo/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/Demo/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "00e7ff74-3b7b-4356-8663-b1190dd9fdb4",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Demo/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/Demo/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "97a2f8d4-4750-44cb-8773-83a94e78edf6",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5a77e8ce-1fa6-431a-b3e3-9765ecc2243e",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bded5276-86ac-4eb6-8698-5906159a07ac",
      "clientId": "backend",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "cNqekUpJOC2y357ekqwn7tJhgQRuK6yg",
      "redirectUris": [""],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1678624177",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ef3a5ccb-1a7d-4013-aa7e-91e9649fd78a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "adba5f19-dabf-460e-916b-8aa2cbdf5011",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0cb1fd00-5708-4992-906c-2bfcef6c7592",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:backend:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "41f5524a-7f34-4526-a69b-803d9b6520de",
            "uris": ["/*"]
          }
        ],
        "policies": [],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "0b843248-544c-4521-b0e6-325d2f7fc717",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9c041a56-9bbb-4d28-b218-83afb5f00904",
      "clientId": "frontend",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:10300",
      "adminUrl": "",
      "baseUrl": "http://localhost:10300",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:10300/*", "http://127.0.0.1:10300/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:10300/*##http://127.0.0.1:10300/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d19fd159-6d37-4d93-bfd5-023cf1a55e0f",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "82548d20-9324-4c3d-93a9-5d5e02e658d9",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/Demo/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/Demo/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c6512d0a-4e2d-4eaa-9da8-2f4c472f4b5f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "84c94a89-6b26-4374-b19d-6b68c199cbec",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "ad3e4d06-88f6-4d8e-97a1-78d98b6d2822",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "0956b38c-5edc-42fd-bfbc-c84013535c77",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "fc478288-2110-48bd-9746-6a2e6d7fbeb4",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "26013df3-13ea-430e-bb97-46e83a60eb8e",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "33689ed5-3692-499e-9fb1-03dff7c95304",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "fa4c4753-3ae3-42a7-a8f5-d54f3ace65f2",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0d87aacd-767a-4c2f-aaa7-46c8475d6b98",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "8f162f92-7c3c-4fc2-b314-80647631fa41",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "dbefb6d1-7feb-4c1c-ab1f-b53b57a22423",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "1ae255d4-66a0-436b-be8b-17b8e5b9c0bc",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0cf6a9a7-134f-49c6-8ca8-bb5c4ec58d1c",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c7528a6b-dfd5-46cc-b222-c5c88d6f8166",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "cef0af0b-6385-4520-8f60-e433a23b7bcd",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "ce2652d1-7845-4d66-8261-dd2b35a2555e",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "5ed663ba-5161-4b86-9583-1a8b90ffd247",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "99886fc2-a5ee-4ea1-a9c2-c96df2f763a9",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "c20b50af-b2c6-41fb-ac5d-7bd6b5e55aab",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e6085039-ad82-41c1-864a-3c65237bfd56",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ac3fe434-a2c2-45cc-9237-a917f0d25d56",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6aa938a9-2e52-4ccf-96dd-73f4c3b6e2af",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3d306ef6-26aa-4ff8-8489-93a4f84670fb",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "06a3e9ad-2b39-4398-bafe-95473b88ae1f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cf5be65e-2d63-4b2b-9da5-c4ea073b734c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bf0c7204-b257-46ec-b71c-5a47b889b4d6",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ab023e28-d167-4d08-bdab-06b05795bdcd",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "be6f5865-c11e-425a-a21e-e87db89a0cbc",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "836f633b-64eb-4977-8284-c22d789e89c5",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08781ec2-1afc-4a8c-8235-9bfc9b36acf3",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1b2d2a7a-5073-44cb-bd16-43fae27ad0f7",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "65a95e64-2fe7-458e-bf7f-dfa3a916465b",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "34ac60e9-ac66-4d55-b98a-c2f98a865e08",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae436eaf-b156-41b5-97c9-ab9fb616845b",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a5b4b6dd-85c5-493d-96e4-4bea5a9848cc",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e4f3e5d5-8733-4296-948f-542fe09e6003",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4d368509-01cc-44f5-8506-74617f2bef5b",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ef4c38f0-530e-437f-89af-bada6bb02985",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "39197931-fc69-4f98-aa12-ba4a964b262f",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "518cb379-1cb8-40ac-9cdd-380e972a18b9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "cb9c0949-d2fa-4039-8e58-a93f92648d93",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "927c0293-2caf-43d7-b6ed-1e29fedeebfc",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "d90ec9f4-0730-4ebe-8109-aebba099dee8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "59525525-811f-43d1-bd81-aee842addf42",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "13ea8191-00d0-4694-bf2a-6ff04257fdb8",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "dfc97276-3ed4-4841-bfee-978757cfbbdc",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "bb7a1c06-644b-4389-a964-a9869096e742",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "a1d5f9d3-36e7-443e-8fbf-37edee968973",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAsfjtp3/rQ1iOGenO6C2uOGIxTqRyy5G3vLVCL4V5TxNpQ2ym1Wli5C0R/0CNI4ytYvTvLqurpgIakq5bdVpr6D/ODHrUxo40yZ+5CBi+mHIQraT8AbmAlp6ShoOneo7ZyRN5EzlBM+fZ2gsrqHj2SxFkxPVcZB9Y+E5uO5eTNKilBqI6iUn5yzPyqHi8/RwH36YntBySyEVojWs7VGKVO2Da8CLha3pcxVFyDac+69YGfsfq3YKJ8/ifDl8dy65Enq6msQKI4IqnBwi1iblt47iikwycFMp99s+Ug7jXiZ+J9Og3Mcb8zwH+oVcvAWD1vXDhUVGRx+VYdnZiN6Wg4wIDAQABAoIBAEu3DRhhJgxZPN9OZr3FTWTkdXixIrtza3lHnfhMrx7SscpDC7koZC+R8yGma0VQAKXkcWtoEpcGNxrnPbav+M9ucbFCgopUjqWmo5gLuu5tPKY7VhE/w7KQlOLQWOydoI7Yj357sb8s6LRIY1MB3zpxlG7sudlIste0ulX09uYEEcdxNWEd9FgKm4CnUbNUZYArKtYJgS19DRh9kmEJ6yBftP5IG7ziXXCtUpFTEq6P2iVPMmeDznr9pG/fjUme7cAhhR7RCOf/8cUbgPnatAViqqeKw6hdw1901hrBhGcABu/qPmevufaAYF3zi0vkApZpPVIzMskZ2FeMEeC/7b0CgYEA2T5x7xzjQvI7zRydQdocUD+Vggz89sB7Mop02o4TID26Ul1hoqUH3TcB1HE1L8Xmx17Zz4hlK+9JIkucmOSxh7ld2fmkp9UpAz9mcEliBJnFZPBlGqKYe5qWNsIGE+9Ltp39qusg33QUDkvZl6ti3ubzDCRvQypawUPjFP14Fs0CgYEA0bjydkWCTj/dWqDFNR7D5mRIBZ9xxlJMItXOIZSaOOFKK9aJtsoZw2BSbEt2JkoZ3JJAym4xUIg/ybCMSlurzV8umsrNkDxhiUpDo23zMapL+PV0ra2DuWsvC6FDROBr2susf+P2bP7MCC0EtiswbG9kQm8HZr8taRaFf2XWtm8CgYEAsOmTawABarFNVdmpjskKKae+HyxojKFvMldileEBXk4mf5CgRA1U/CchjFms0Hy/VTi+86zFhyPUUON2YWRL1pV0AmC0YCDMx2JID8US12BKScsi6q/isTXQgkM7I9zJsauzug7EtHQZKRNH3aWqXI+C+i5plS7WvXCFasCHnTkCgYB/ADfcBXXGewhJ5IfoBixtrZaryQV2KsouYjlEvp+yCEQJTg7xYWu+k+r157CxuTf2CZ8wtxAoC4pNUhtywBbG9Hfdhyh6ywXpxM42/tNB5TXCmqnArw3Q0CaaLVr2L81AnwxkGiFVmermnJR42KinUcFuNZxOzUDrnZbUMlCXAwKBgQCCHPoLEzUZPLbWpjBKUcRAnnbUPRv7+SOdiBCogV8oVAePJh61z5Hq3xHu+zWGy1tgD/epzMCSBvOqQvjIfKEXal1L4b0QvqCpvCNxVyxYXiPYj2zKtVmISlHI1wby6LIHsowVciBOdsxZd/n/yfIzAf1Ts5uNaaM8PilwV5EOGg=="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIIClzCCAX8CBgGG1cV4yzANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAREZW1vMB4XDTIzMDMxMjEyMjAzM1oXDTMzMDMxMjEyMjIxM1owDzENMAsGA1UEAwwERGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALH47ad/60NYjhnpzugtrjhiMU6kcsuRt7y1Qi+FeU8TaUNsptVpYuQtEf9AjSOMrWL07y6rq6YCGpKuW3Vaa+g/zgx61MaONMmfuQgYvphyEK2k/AG5gJaekoaDp3qO2ckTeRM5QTPn2doLK6h49ksRZMT1XGQfWPhObjuXkzSopQaiOolJ+csz8qh4vP0cB9+mJ7QckshFaI1rO1RilTtg2vAi4Wt6XMVRcg2nPuvWBn7H6t2CifP4nw5fHcuuRJ6uprECiOCKpwcItYm5beO4opMMnBTKffbPlIO414mfifToNzHG/M8B/qFXLwFg9b1w4VFRkcflWHZ2YjeloOMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAa7d1X+bXX1yYEHBUB0igww8hn+Tb/wtuAdg9f6kmoMHNyQLMjjWtziJvo8kl8vXYWQNTYfsZ/RggocEaal8zldtI6f/GWYqaiZsZUsJL5saxZ+/9YYk/f1WYqcJw0yyFBU2/GgkTjqtLeAHUp5nkTnqPb1ilGdt/5svQ7RQ8obK0Ke4nYdfR9HBs40gcbxiO3QHv18jPYyzg1myCXoYh4HwVGF81R6QbcKWynbZ44EEoKN40p6hRFRRqt11tn7Cvav9mlsvClraZL75UvYBSrMt62f/C3pCOFpibmtTI2K0EEwhCOvmJpqNfotVnFVAzMSyhirC8DREu93kKT7QJXg=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "cce4698e-b374-4076-8281-9dd045759502",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAjCoR9JQPl0XGvxEj76SLli3mgWQnCwEhMaKBdut8Jz4s68iv34DzwnVZLWlNBeKBKAesiJ43iLeXE/FbfRIaHfYQ+AFGjbfQm1mTVnKQdAxyDXUMBhk82W0bjlz3Y/EhYHdDYuUUtQv+xK7R01q+gPIku2XqS9VCHbnT0sxbjsjCMyEmHLdGyu13/C5ocRtlD4ZOILWIj8rTtTz0sjxg5lFZUCgDMnuvUAwlm0gy82nQShzpWq6INMXvJ10IK3JXB4MxpLNW7xZO4eSK/SwtW8U9nlA5PXpQqHrkEyBBiSOrJFTWriN823CgtJTOw1lSMpO+sFEUJ5bvDUuTRN6X1wIDAQABAoIBADdA4mEi+N5uQEHT1PHEUM57+7EoNQfugxJY+GZTwFaL+RNdwo79+5m9vtDbAOT//GA2Xjpg/I1lqiXPcHxmZWtINDo/7nsxagfDkQR0FyPYQCGz8XB6BHXFwCYn2dJJHRo1CZhzq+0O9Hi+XbLOw+h7DCXfsDQCtpSXS7x+mN05C3QutThXm6koZVe6/rnEn/B3/+KfDbtbQFfzXBQjOjUSq9n8EdqkCPOHXmwIZZZwCqSn5pXKTc1TtYj7JMSHbpwECVEgev/8KY95n+M1WiqRcY10pXoGtPq7vJ8Sae9EUNmsdBnl/76FEiSZcCo5pwuV4pB7vLwgbqXuT/rTD/ECgYEAxVmyJdDeAJEKVlE6TCVdSeRUSnLOZNBI8s5216Aori96NVd3Kgt5NRsYNTaCV4IC8bUEZON4h19eUsceQC66mzqMvoB0VS9MLIzZul47+zPYjMNt4Vf0tofQPLpHy21USmXDIZEKbpQAv6lPEgzzn6GoN6OtlfUBL0Wp5JAUG68CgYEAtdGxat4T/sjGZncJaRLNQovbz+iJB65+YjPW46cYj12e4LPQWcZJ5VZ41GMAPrkoJ4QTmaTzwWZMrfAWiH5JS8ZHEQA4B5S7s35IJfWKd01Qs5nPPUi9QEw9Tc+V0Ce88ijezVFlk7BvXf2IYLXdLZMUtUBmhT6ImiG8HuKUiFkCgYEAl+2ehRhP4FXIhH0SCU72i405CvtpQxlKH4qs2QEWcEpipbAJMBgXHrgWIdkt7NpNE/EMSfMIdgcIYWejNTwEMr6XXY0cgfvgg6eHcr9bI99dBbjp3YJOBTt3J1ktLkGjk4bV+wBi7JAKJ4LbOYU5BJp6GyNp3jj4yYCy8x+sK0cCgYB+xjduzGokvNmZmGZ3XSTBwcMCtKDXOlPlJUAwe9IkJKMjCj28WwYrYp/ddyo0keXtp6oC94D+2NWecklD4so4i4gB0qU+o/Y8sVCdJxflF4OttxFJKe7LZl1YY+WRviOAtf6kKp0o3VzJrH3q8OPHY0aNGtphDbkxv1PsNRBcAQKBgGRYew/AH8qrtlFehx3S1S4MFxJlDbboaEmXg70QFDl4YSHtTng9/YESLo8yzFOyI4vdyKnUQbrhpHGtggLQpcAcqXxArvXGFg3x3ALHkwMQv+CsfHVAEmZKbS74VE7o+BlYz+13hNXXuTEe3OZyvCsd1U0XGqV6WaRcGUqvU6QQ"
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIIClzCCAX8CBgGG1cV3dzANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAREZW1vMB4XDTIzMDMxMjEyMjAzM1oXDTMzMDMxMjEyMjIxM1owDzENMAsGA1UEAwwERGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIwqEfSUD5dFxr8RI++ki5Yt5oFkJwsBITGigXbrfCc+LOvIr9+A88J1WS1pTQXigSgHrIieN4i3lxPxW30SGh32EPgBRo230JtZk1ZykHQMcg11DAYZPNltG45c92PxIWB3Q2LlFLUL/sSu0dNavoDyJLtl6kvVQh2509LMW47IwjMhJhy3Rsrtd/wuaHEbZQ+GTiC1iI/K07U89LI8YOZRWVAoAzJ7r1AMJZtIMvNp0Eoc6VquiDTF7yddCCtyVweDMaSzVu8WTuHkiv0sLVvFPZ5QOT16UKh65BMgQYkjqyRU1q4jfNtwoLSUzsNZUjKTvrBRFCeW7w1Lk0Tel9cCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAUegbb4klEezRmwPGmr3zo6hvhiTXSJKxkwK3so15T+8ynUYpOYXPkGHcZPvjRgaaOj4PLIWikmA148hTxSmOIlf7Y3eJwi3sKY4uhJZoqGDfiopexJZDXixrK8Qvayg2rPbnawiUelJqOq2KrzXm6OIHecZURghL4jLYQksjZyQScilC4iJoFZGK3gWCbkXTMp6QU04wE+MfApJC+iCno2hc6+W2wx9aQxxredDYNfm0klPUm5AumMyscTB9BEZiEr4k6N9GYxA/DdPn4UPvl0EMHZzhbGqJtJQFe8vLVl8xHYq/BHVSN9dRJtFWwL8+TT+Q51ZLYl1Fi4aS8tuTJw=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "6b1c5c18-fa11-4066-84a3-c0f8435eef02",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["57630532-438a-4bcc-a185-5091dc87c75a"],
          "secret": ["xZf7T47zrpFbTOOoTb5-1A"],
          "priority": ["100"]
        }
      },
      {
        "id": "323fc191-2128-4ba5-9c45-9f4747c86d4e",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["4fb75be6-6dfe-4851-9dd1-470deecaf693"],
          "secret": [
            "micWG-UjcPG9llvdyK36Ds00iXE3HjmX1M5_s59h-4QtF6xzAVAGsmxXhRgv5QPzA0GlhbN9LEbnMQ9rg9bBvw"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "c6494cb2-b610-4d7f-92b1-f07df51c118e",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "51ddddf7-0274-40a6-a1cc-6ebfcd20c609",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8b3a31ee-95dc-4bb7-8187-cc0f9eaba985",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5a3948f9-30dd-4c7f-8db1-906dcf95b558",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0a3275e5-2521-4197-b69b-f6ad7dcb3732",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d5393f0f-de60-4114-ad26-c0f80a2e0e2f",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0ee46677-2753-4eb6-8e78-539865c9533d",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6e12be5c-eb8e-477b-9eed-3608fd389e94",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1718276f-4863-4c85-8dab-3796592ba951",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "83b00b99-76bc-4f68-b6b9-d7e150ac3efa",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7324f363-22ec-496d-a75d-c0d47cbbc236",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "79b87044-78ab-46f9-9215-6bf2f8a463fc",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ec287c4e-7250-489a-8736-e9eac0983332",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e8066049-fb89-4d9e-b38e-261cd6e5d529",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ba782bde-1b06-40ff-8c50-27ed9113d88e",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a7ea70a2-e0fb-44e5-b4a4-9a0c7fd87999",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e48d2b5d-2629-4194-bfd0-1f1f353b554c",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c82372df-ca3a-4d39-b995-9ff8b5eea5d4",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0b8f6812-6d0a-49fd-833e-085c94213a49",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "badbb1f3-77e9-42e2-a595-7efd472dfc8a",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "5d7ccf89-abe5-4ed3-ad44-8d7a942e8ad1",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "befc469e-b50b-4a1a-acbd-1ddc808e9045",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "20.0.3",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
